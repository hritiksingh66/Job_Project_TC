{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import SearchBar from \"../components/SearchBar\";\n// import background from \"../pages/BackGround.jpg\";\n\n// const Home = () => {\n//   const [cards, setCards] = useState([]);\n//   const [filteredCards, setFilteredCards] = useState([]);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [formData, setFormData] = useState({\n//     title: \"\",\n//     description: \"\",\n//     image: null,\n//   });\n\n//   useEffect(() => {\n//     const fetchCards = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:5000/api/cards\");\n//         const data = await response.json();\n//         setCards(data);\n//         setFilteredCards(data);\n//       } catch (error) {\n//         console.error(\"Error fetching cards:\", error);\n//       }\n//     };\n\n//     fetchCards();\n//   }, []);\n\n//   useEffect(() => {\n//     const filtered = cards.filter((card) =>\n//       card.title.toLowerCase().includes(searchTerm.toLowerCase())\n//     );\n//     setFilteredCards(filtered);\n//   }, [searchTerm, cards]);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleFileChange = (e) => {\n//     setFormData({ ...formData, image: e.target.files[0] });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const form = new FormData();\n//     form.append(\"title\", formData.title);\n//     form.append(\"description\", formData.description);\n//     form.append(\"image\", formData.image);\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/api/cards\", {\n//         method: \"POST\",\n//         body: form,\n//       });\n//       const newCard = await response.json();\n//       setCards((prevCards) => [newCard, ...prevCards]);\n//       setFilteredCards((prevCards) => [newCard, ...prevCards]);\n//       setFormData({ title: \"\", description: \"\", image: null });\n//     } catch (error) {\n//       console.error(\"Error uploading card:\", error);\n//     }\n//   };\n\n//   return (\n//     <div\n//       style={{\n//         padding: \"16px\",\n//         maxWidth: \"900px\",\n//         margin: \"0 auto\",\n//         fontFamily: \"'Roboto', sans-serif\",\n\n//         // ...............................\n//         backgroundImage: `url(${background})`,\n//         backgroundSize: \"cover\",\n//         backgroundPosition: \"center\",\n//         minHeight: \"100vh\",\n//         display: \"flex\",\n//         flexDirection: \"column\",\n//         alignItems: \"center\",\n//         justifyContent: \"center\",\n//         color: \"#333\",\n\n//         // '''''''''''''''''''''''''''''''''''\n\n//       }}\n//     >\n//       <h1\n//         style={{\n//           textAlign: \"center\",\n//           color: \"#4A90E2\",\n//           marginBottom: \"24px\",\n//           fontSize: \"2rem\",\n//           fontWeight: \"bold\",\n//         }}\n//       >\n//         Welcome to the Image Gallery\n//       </h1>\n\n//       {/* Search Bar */}\n//       <SearchBar setSearchTerm={setSearchTerm} />\n\n//       {/* Upload Form */}\n//       <form\n//         onSubmit={handleSubmit}\n//         style={{\n//           display: \"flex\",\n//           flexDirection: \"column\",\n//           gap: \"16px\",\n//           background: \"#fff\",\n//           padding: \"16px\",\n//           borderRadius: \"8px\",\n//           boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\n//           marginBottom: \"32px\",\n//         }}\n//       >\n//         <input\n//           type=\"text\"\n//           name=\"title\"\n//           placeholder=\"Title\"\n//           value={formData.title}\n//           onChange={handleInputChange}\n//           style={{\n//             padding: \"12px\",\n//             borderRadius: \"8px\",\n//             border: \"1px solid #ccc\",\n//             fontSize: \"1rem\",\n//           }}\n//           required\n//         />\n//         <textarea\n//           name=\"description\"\n//           placeholder=\"Description\"\n//           value={formData.description}\n//           onChange={handleInputChange}\n//           rows=\"3\"\n//           style={{\n//             padding: \"12px\",\n//             borderRadius: \"8px\",\n//             border: \"1px solid #ccc\",\n//             fontSize: \"1rem\",\n//           }}\n//           required\n//         ></textarea>\n//         <input\n//           type=\"file\"\n//           onChange={handleFileChange}\n//           style={{\n//             padding: \"8px\",\n//             fontSize: \"1rem\",\n//           }}\n//           required\n//         />\n//         <button\n//           type=\"submit\"\n//           style={{\n//             background: \"#4A90E2\",\n//             color: \"#fff\",\n//             padding: \"12px\",\n//             border: \"none\",\n//             borderRadius: \"8px\",\n//             cursor: \"pointer\",\n//             fontSize: \"1rem\",\n//             fontWeight: \"bold\",\n//           }}\n//         >\n//           Upload Image\n//         </button>\n//       </form>\n\n//       {/* Cards Display */}\n//       <div\n//         style={{\n//           display: \"grid\",\n//           gridTemplateColumns: \"repeat(auto-fit, minmax(250px, 1fr))\",\n//           gap: \"16px\",\n//         }}\n//       >\n//         {filteredCards.length > 0 ? (\n//           filteredCards.map((card) => (\n//             <div\n//               key={card._id}\n//               style={{\n//                 border: \"1px solid #ccc\",\n//                 borderRadius: \"8px\",\n//                 overflow: \"hidden\",\n//                 boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\n//                 background: \"#fff\",\n//               }}\n//             >\n//               <img\n//                 src={`http://localhost:5000/uploads/${card.image}`}\n//                 alt={card.title}\n//                 style={{\n//                   width: \"100%\",\n//                   height: \"200px\",\n//                   objectFit: \"cover\",\n//                 }}\n//               />\n//               <div style={{ padding: \"16px\" }}>\n//                 <h3\n//                   style={{\n//                     margin: \"0 0 8px 0\",\n//                     fontWeight: \"bold\",\n//                     fontSize: \"1.2rem\",\n//                   }}\n//                 >\n//                   {card.title}\n//                 </h3>\n//                 <p style={{ margin: 0, color: \"#555\" }}>{card.description}</p>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p style={{ textAlign: \"center\", color: \"#888\" }}>\n//             No cards found. Try searching for something else!\n//           </p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Home;","map":{"version":3,"names":[],"sources":["C:/Users/HP PC/Desktop/Job @TalentConnect/Job Project/frontend/src/pages/Home.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import SearchBar from \"../components/SearchBar\";\r\n// import background from \"../pages/BackGround.jpg\";\r\n\r\n// const Home = () => {\r\n//   const [cards, setCards] = useState([]);\r\n//   const [filteredCards, setFilteredCards] = useState([]);\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [formData, setFormData] = useState({\r\n//     title: \"\",\r\n//     description: \"\",\r\n//     image: null,\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const fetchCards = async () => {\r\n//       try {\r\n//         const response = await fetch(\"http://localhost:5000/api/cards\");\r\n//         const data = await response.json();\r\n//         setCards(data);\r\n//         setFilteredCards(data);\r\n//       } catch (error) {\r\n//         console.error(\"Error fetching cards:\", error);\r\n//       }\r\n//     };\r\n\r\n//     fetchCards();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     const filtered = cards.filter((card) =>\r\n//       card.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n//     );\r\n//     setFilteredCards(filtered);\r\n//   }, [searchTerm, cards]);\r\n\r\n//   const handleInputChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n//   };\r\n\r\n//   const handleFileChange = (e) => {\r\n//     setFormData({ ...formData, image: e.target.files[0] });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const form = new FormData();\r\n//     form.append(\"title\", formData.title);\r\n//     form.append(\"description\", formData.description);\r\n//     form.append(\"image\", formData.image);\r\n\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:5000/api/cards\", {\r\n//         method: \"POST\",\r\n//         body: form,\r\n//       });\r\n//       const newCard = await response.json();\r\n//       setCards((prevCards) => [newCard, ...prevCards]);\r\n//       setFilteredCards((prevCards) => [newCard, ...prevCards]);\r\n//       setFormData({ title: \"\", description: \"\", image: null });\r\n//     } catch (error) {\r\n//       console.error(\"Error uploading card:\", error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         padding: \"16px\",\r\n//         maxWidth: \"900px\",\r\n//         margin: \"0 auto\",\r\n//         fontFamily: \"'Roboto', sans-serif\",\r\n\r\n\r\n//         // ...............................\r\n//         backgroundImage: `url(${background})`,\r\n//         backgroundSize: \"cover\",\r\n//         backgroundPosition: \"center\",\r\n//         minHeight: \"100vh\",\r\n//         display: \"flex\",\r\n//         flexDirection: \"column\",\r\n//         alignItems: \"center\",\r\n//         justifyContent: \"center\",\r\n//         color: \"#333\",\r\n       \r\n//         // '''''''''''''''''''''''''''''''''''\r\n      \r\n\r\n       \r\n//       }}\r\n//     >\r\n//       <h1\r\n//         style={{\r\n//           textAlign: \"center\",\r\n//           color: \"#4A90E2\",\r\n//           marginBottom: \"24px\",\r\n//           fontSize: \"2rem\",\r\n//           fontWeight: \"bold\",\r\n//         }}\r\n//       >\r\n//         Welcome to the Image Gallery\r\n//       </h1>\r\n\r\n//       {/* Search Bar */}\r\n//       <SearchBar setSearchTerm={setSearchTerm} />\r\n\r\n//       {/* Upload Form */}\r\n//       <form\r\n//         onSubmit={handleSubmit}\r\n//         style={{\r\n//           display: \"flex\",\r\n//           flexDirection: \"column\",\r\n//           gap: \"16px\",\r\n//           background: \"#fff\",\r\n//           padding: \"16px\",\r\n//           borderRadius: \"8px\",\r\n//           boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\r\n//           marginBottom: \"32px\",\r\n//         }}\r\n//       >\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"title\"\r\n//           placeholder=\"Title\"\r\n//           value={formData.title}\r\n//           onChange={handleInputChange}\r\n//           style={{\r\n//             padding: \"12px\",\r\n//             borderRadius: \"8px\",\r\n//             border: \"1px solid #ccc\",\r\n//             fontSize: \"1rem\",\r\n//           }}\r\n//           required\r\n//         />\r\n//         <textarea\r\n//           name=\"description\"\r\n//           placeholder=\"Description\"\r\n//           value={formData.description}\r\n//           onChange={handleInputChange}\r\n//           rows=\"3\"\r\n//           style={{\r\n//             padding: \"12px\",\r\n//             borderRadius: \"8px\",\r\n//             border: \"1px solid #ccc\",\r\n//             fontSize: \"1rem\",\r\n//           }}\r\n//           required\r\n//         ></textarea>\r\n//         <input\r\n//           type=\"file\"\r\n//           onChange={handleFileChange}\r\n//           style={{\r\n//             padding: \"8px\",\r\n//             fontSize: \"1rem\",\r\n//           }}\r\n//           required\r\n//         />\r\n//         <button\r\n//           type=\"submit\"\r\n//           style={{\r\n//             background: \"#4A90E2\",\r\n//             color: \"#fff\",\r\n//             padding: \"12px\",\r\n//             border: \"none\",\r\n//             borderRadius: \"8px\",\r\n//             cursor: \"pointer\",\r\n//             fontSize: \"1rem\",\r\n//             fontWeight: \"bold\",\r\n//           }}\r\n//         >\r\n//           Upload Image\r\n//         </button>\r\n//       </form>\r\n\r\n//       {/* Cards Display */}\r\n//       <div\r\n//         style={{\r\n//           display: \"grid\",\r\n//           gridTemplateColumns: \"repeat(auto-fit, minmax(250px, 1fr))\",\r\n//           gap: \"16px\",\r\n//         }}\r\n//       >\r\n//         {filteredCards.length > 0 ? (\r\n//           filteredCards.map((card) => (\r\n//             <div\r\n//               key={card._id}\r\n//               style={{\r\n//                 border: \"1px solid #ccc\",\r\n//                 borderRadius: \"8px\",\r\n//                 overflow: \"hidden\",\r\n//                 boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\r\n//                 background: \"#fff\",\r\n//               }}\r\n//             >\r\n//               <img\r\n//                 src={`http://localhost:5000/uploads/${card.image}`}\r\n//                 alt={card.title}\r\n//                 style={{\r\n//                   width: \"100%\",\r\n//                   height: \"200px\",\r\n//                   objectFit: \"cover\",\r\n//                 }}\r\n//               />\r\n//               <div style={{ padding: \"16px\" }}>\r\n//                 <h3\r\n//                   style={{\r\n//                     margin: \"0 0 8px 0\",\r\n//                     fontWeight: \"bold\",\r\n//                     fontSize: \"1.2rem\",\r\n//                   }}\r\n//                 >\r\n//                   {card.title}\r\n//                 </h3>\r\n//                 <p style={{ margin: 0, color: \"#555\" }}>{card.description}</p>\r\n//               </div>\r\n//             </div>\r\n//           ))\r\n//         ) : (\r\n//           <p style={{ textAlign: \"center\", color: \"#888\" }}>\r\n//             No cards found. Try searching for something else!\r\n//           </p>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Home;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}