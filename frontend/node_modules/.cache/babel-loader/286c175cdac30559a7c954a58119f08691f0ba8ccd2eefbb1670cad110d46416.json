{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP PC\\\\Desktop\\\\Job @TalentConnect\\\\Job Project\\\\frontend\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import SearchBar from \"../components/SearchBar\";\n\n// const Home = () => {\n//   const [cards, setCards] = useState([]);\n//   const [filteredCards, setFilteredCards] = useState([]);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n//   const [formData, setFormData] = useState({\n//     title: \"\",\n//     description: \"\",\n//     image: null,\n//   });\n\n//   useEffect(() => {\n//     const fetchCards = async () => {\n//       try {\n//         const response = await fetch(\"http://localhost:5000/api/cards\");\n//         const data = await response.json();\n//         setCards(data);\n//         setFilteredCards(data);\n//       } catch (error) {\n//         console.error(\"Error fetching cards:\", error);\n//       }\n//     };\n\n//     fetchCards();\n//   }, []);\n\n//   useEffect(() => {\n//     const filtered = cards.filter((card) =>\n//       card.title.toLowerCase().includes(searchTerm.toLowerCase())\n//     );\n//     setFilteredCards(filtered);\n//   }, [searchTerm, cards]);\n\n//   const handleInputChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleFileChange = (e) => {\n//     setFormData({ ...formData, image: e.target.files[0] });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const form = new FormData();\n//     form.append(\"title\", formData.title);\n//     form.append(\"description\", formData.description);\n//     form.append(\"image\", formData.image);\n\n//     try {\n//       const response = await fetch(\"http://localhost:5000/api/cards\", {\n//         method: \"POST\",\n//         body: form,\n//       });\n//       const newCard = await response.json();\n//       setCards((prevCards) => [newCard, ...prevCards]);\n//       setFilteredCards((prevCards) => [newCard, ...prevCards]);\n//       setFormData({ title: \"\", description: \"\", image: null });\n//     } catch (error) {\n//       console.error(\"Error uploading card:\", error);\n//     }\n//   };\n\n//   return (\n//     <div\n//       style={{\n//         padding: \"16px\",\n//         maxWidth: \"900px\",\n//         margin: \"0 auto\",\n//         fontFamily: \"'Roboto', sans-serif\",\n\n//         // ...............................\n//       \n\n//         // '''''''''''''''''''''''''''''''''''\n\n//       }}\n//     >\n//       <h1\n//         style={{\n//           textAlign: \"center\",\n//           color: \"#4A90E2\",\n//           marginBottom: \"24px\",\n//           fontSize: \"2rem\",\n//           fontWeight: \"bold\",\n//         }}\n//       >\n//         Welcome to the Image Gallery\n//       </h1>\n\n//       {/* Search Bar */}\n//       <SearchBar setSearchTerm={setSearchTerm} />\n\n//       {/* Upload Form */}\n//       <form\n//         onSubmit={handleSubmit}\n//         style={{\n//           display: \"flex\",\n//           flexDirection: \"column\",\n//           gap: \"16px\",\n//           background: \"#fff\",\n//           padding: \"16px\",\n//           borderRadius: \"8px\",\n//           boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\n//           marginBottom: \"32px\",\n//         }}\n//       >\n//         <input\n//           type=\"text\"\n//           name=\"title\"\n//           placeholder=\"Title\"\n//           value={formData.title}\n//           onChange={handleInputChange}\n//           style={{\n//             padding: \"12px\",\n//             borderRadius: \"8px\",\n//             border: \"1px solid #ccc\",\n//             fontSize: \"1rem\",\n//           }}\n//           required\n//         />\n//         <textarea\n//           name=\"description\"\n//           placeholder=\"Description\"\n//           value={formData.description}\n//           onChange={handleInputChange}\n//           rows=\"3\"\n//           style={{\n//             padding: \"12px\",\n//             borderRadius: \"8px\",\n//             border: \"1px solid #ccc\",\n//             fontSize: \"1rem\",\n//           }}\n//           required\n//         ></textarea>\n//         <input\n//           type=\"file\"\n//           onChange={handleFileChange}\n//           style={{\n//             padding: \"8px\",\n//             fontSize: \"1rem\",\n//           }}\n//           required\n//         />\n//         <button\n//           type=\"submit\"\n//           style={{\n//             background: \"#4A90E2\",\n//             color: \"#fff\",\n//             padding: \"12px\",\n//             border: \"none\",\n//             borderRadius: \"8px\",\n//             cursor: \"pointer\",\n//             fontSize: \"1rem\",\n//             fontWeight: \"bold\",\n//           }}\n//         >\n//           Upload Image\n//         </button>\n//       </form>\n\n//       {/* Cards Display */}\n//       <div\n//         style={{\n//           display: \"grid\",\n//           gridTemplateColumns: \"repeat(auto-fit, minmax(250px, 1fr))\",\n//           gap: \"16px\",\n//         }}\n//       >\n//         {filteredCards.length > 0 ? (\n//           filteredCards.map((card) => (\n//             <div\n//               key={card._id}\n//               style={{\n//                 border: \"1px solid #ccc\",\n//                 borderRadius: \"8px\",\n//                 overflow: \"hidden\",\n//                 boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\n//                 background: \"#fff\",\n//               }}\n//             >\n//               <img\n//                 src={`http://localhost:5000/uploads/${card.image}`}\n//                 alt={card.title}\n//                 style={{\n//                   width: \"100%\",\n//                   height: \"200px\",\n//                   objectFit: \"cover\",\n//                 }}\n//               />\n//               <div style={{ padding: \"16px\" }}>\n//                 <h3\n//                   style={{\n//                     margin: \"0 0 8px 0\",\n//                     fontWeight: \"bold\",\n//                     fontSize: \"1.2rem\",\n//                   }}\n//                 >\n//                   {card.title}\n//                 </h3>\n//                 <p style={{ margin: 0, color: \"#555\" }}>{card.description}</p>\n//               </div>\n//             </div>\n//           ))\n//         ) : (\n//           <p style={{ textAlign: \"center\", color: \"#888\" }}>\n//             No cards found. Try searching for something else!\n//           </p>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Home;\n\nimport React, { useState, useEffect } from \"react\";\nimport SearchBar from \"../components/SearchBar\";\nimport background from \"../pages/BackGround.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [filteredCards, setFilteredCards] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [formData, setFormData] = useState({\n    title: \"\",\n    description: \"\",\n    image: null\n  });\n  useEffect(() => {\n    const fetchCards = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/cards\");\n        const data = await response.json();\n        setCards(data);\n        setFilteredCards(data);\n      } catch (error) {\n        console.error(\"Error fetching cards:\", error);\n      }\n    };\n    fetchCards();\n  }, []);\n  useEffect(() => {\n    const filtered = cards.filter(card => card.title.toLowerCase().includes(searchTerm.toLowerCase()));\n    setFilteredCards(filtered);\n  }, [searchTerm, cards]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleFileChange = e => {\n    setFormData({\n      ...formData,\n      image: e.target.files[0]\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const form = new FormData();\n    form.append(\"title\", formData.title);\n    form.append(\"description\", formData.description);\n    form.append(\"image\", formData.image);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/cards\", {\n        method: \"POST\",\n        body: form\n      });\n      const newCard = await response.json();\n      setCards(prevCards => [newCard, ...prevCards]);\n      setFilteredCards(prevCards => [newCard, ...prevCards]);\n      setFormData({\n        title: \"\",\n        description: \"\",\n        image: null\n      });\n    } catch (error) {\n      console.error(\"Error uploading card:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      minHeight: \"100vh\",\n      backgroundSize: \"cover\",\n      // Ensures the image covers the entire viewport\n      backgroundPosition: \"center\",\n      // Keeps the image centered\n      backgroundAttachment: \"fixed\",\n      // Keeps the background fixed while scrolling\n      fontFamily: \"'Roboto', sans-serif\",\n      backgroundImage: `url(${background})`,\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n      minHeight: \"100vh\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      color: \"#fff\",\n      padding: \"16px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        marginBottom: \"24px\",\n        fontSize: \"3rem\",\n        fontWeight: \"bold\",\n        textShadow: \"0 4px 8px rgba(0, 0, 0, 0.7)\",\n        transition: \"transform 0.3s ease, color 0.3s ease\",\n        cursor: \"pointer\"\n      },\n      onMouseEnter: e => {\n        e.target.style.transform = \"scale(1.1)\";\n        e.target.style.color = \"#FFD700\"; // Gold hover effect\n      },\n      onMouseLeave: e => {\n        e.target.style.transform = \"scale(1)\";\n        e.target.style.color = \"#fff\";\n      },\n      children: \"Welcome to the Image Gallery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      setSearchTerm: setSearchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: \"16px\",\n        background: \"rgba(255, 255, 255, 0.8)\",\n        // Semi-transparent white background\n        color: \"#000\",\n        padding: \"16px\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 6px 20px rgba(0, 0, 0, 0.2)\",\n        marginBottom: \"32px\",\n        maxWidth: \"600px\",\n        margin: \"0 auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        placeholder: \"Title\",\n        value: formData.title,\n        onChange: handleInputChange,\n        style: {\n          padding: \"12px\",\n          borderRadius: \"8px\",\n          border: \"1px solid #ccc\",\n          fontSize: \"1rem\"\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        placeholder: \"Description\",\n        value: formData.description,\n        onChange: handleInputChange,\n        rows: \"3\",\n        style: {\n          padding: \"12px\",\n          borderRadius: \"8px\",\n          border: \"1px solid #ccc\",\n          fontSize: \"1rem\"\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange,\n        style: {\n          padding: \"8px\",\n          fontSize: \"1rem\"\n        },\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          background: \"#4A90E2\",\n          color: \"#fff\",\n          padding: \"12px\",\n          border: \"none\",\n          borderRadius: \"8px\",\n          cursor: \"pointer\",\n          fontSize: \"1rem\",\n          fontWeight: \"bold\",\n          transition: \"background 0.3s ease\"\n        },\n        onMouseEnter: e => e.target.style.background = \"#357ABD\",\n        onMouseLeave: e => e.target.style.background = \"#4A90E2\",\n        children: \"Upload Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(auto-fit, minmax(250px, 1fr))\",\n        gap: \"20px\",\n        width: \"100%\"\n      },\n      children: filteredCards.length > 0 ? filteredCards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: \"1px solid #ccc\",\n          borderRadius: \"8px\",\n          overflow: \"hidden\",\n          boxShadow: \"0 6px 16px rgba(0, 0, 0, 0.2)\",\n          background: \"#fff\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:5000/uploads/${card.image}`,\n          alt: card.title,\n          style: {\n            width: \"100%\",\n            height: \"200px\",\n            objectFit: \"cover\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: \"16px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              margin: \"0 0 8px 0\",\n              fontWeight: \"bold\",\n              fontSize: \"1.2rem\",\n              color: \"#333\"\n            },\n            children: card.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: 0,\n              color: \"#555\"\n            },\n            children: card.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 15\n        }, this)]\n      }, card._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\",\n          color: \"#eee\"\n        },\n        children: \"No cards found. Try searching for something else!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"yW/eMvOF5PyQyxBNxVmg6BzccOI=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","SearchBar","background","jsxDEV","_jsxDEV","Home","_s","cards","setCards","filteredCards","setFilteredCards","searchTerm","setSearchTerm","formData","setFormData","title","description","image","fetchCards","response","fetch","data","json","error","console","filtered","filter","card","toLowerCase","includes","handleInputChange","e","name","value","target","handleFileChange","files","handleSubmit","preventDefault","form","FormData","append","method","body","newCard","prevCards","style","position","minHeight","backgroundSize","backgroundPosition","backgroundAttachment","fontFamily","backgroundImage","display","flexDirection","alignItems","justifyContent","color","padding","children","textAlign","marginBottom","fontSize","fontWeight","textShadow","transition","cursor","onMouseEnter","transform","onMouseLeave","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","gap","borderRadius","boxShadow","maxWidth","margin","type","placeholder","onChange","border","required","rows","gridTemplateColumns","width","length","map","overflow","src","alt","height","objectFit","_id","_c","$RefreshReg$"],"sources":["C:/Users/HP PC/Desktop/Job @TalentConnect/Job Project/frontend/src/pages/Home.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import SearchBar from \"../components/SearchBar\";\r\n\r\n// const Home = () => {\r\n  //   const [cards, setCards] = useState([]);\r\n//   const [filteredCards, setFilteredCards] = useState([]);\r\n//   const [searchTerm, setSearchTerm] = useState(\"\");\r\n//   const [formData, setFormData] = useState({\r\n//     title: \"\",\r\n//     description: \"\",\r\n//     image: null,\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     const fetchCards = async () => {\r\n//       try {\r\n  //         const response = await fetch(\"http://localhost:5000/api/cards\");\r\n  //         const data = await response.json();\r\n  //         setCards(data);\r\n//         setFilteredCards(data);\r\n//       } catch (error) {\r\n  //         console.error(\"Error fetching cards:\", error);\r\n//       }\r\n//     };\r\n\r\n//     fetchCards();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     const filtered = cards.filter((card) =>\r\n//       card.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n//     );\r\n//     setFilteredCards(filtered);\r\n//   }, [searchTerm, cards]);\r\n\r\n//   const handleInputChange = (e) => {\r\n  //     const { name, value } = e.target;\r\n  //     setFormData({ ...formData, [name]: value });\r\n//   };\r\n\r\n//   const handleFileChange = (e) => {\r\n  //     setFormData({ ...formData, image: e.target.files[0] });\r\n  //   };\r\n  \r\n  //   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const form = new FormData();\r\n//     form.append(\"title\", formData.title);\r\n//     form.append(\"description\", formData.description);\r\n//     form.append(\"image\", formData.image);\r\n\r\n//     try {\r\n  //       const response = await fetch(\"http://localhost:5000/api/cards\", {\r\n    //         method: \"POST\",\r\n    //         body: form,\r\n    //       });\r\n    //       const newCard = await response.json();\r\n    //       setCards((prevCards) => [newCard, ...prevCards]);\r\n    //       setFilteredCards((prevCards) => [newCard, ...prevCards]);\r\n    //       setFormData({ title: \"\", description: \"\", image: null });\r\n    //     } catch (error) {\r\n//       console.error(\"Error uploading card:\", error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n  //     <div\r\n  //       style={{\r\n//         padding: \"16px\",\r\n//         maxWidth: \"900px\",\r\n//         margin: \"0 auto\",\r\n//         fontFamily: \"'Roboto', sans-serif\",\r\n\r\n\r\n//         // ...............................\r\n//       \r\n       \r\n//         // '''''''''''''''''''''''''''''''''''\r\n      \r\n\r\n       \r\n//       }}\r\n//     >\r\n//       <h1\r\n//         style={{\r\n  //           textAlign: \"center\",\r\n//           color: \"#4A90E2\",\r\n//           marginBottom: \"24px\",\r\n//           fontSize: \"2rem\",\r\n//           fontWeight: \"bold\",\r\n//         }}\r\n//       >\r\n//         Welcome to the Image Gallery\r\n//       </h1>\r\n\r\n//       {/* Search Bar */}\r\n//       <SearchBar setSearchTerm={setSearchTerm} />\r\n\r\n//       {/* Upload Form */}\r\n//       <form\r\n//         onSubmit={handleSubmit}\r\n//         style={{\r\n  //           display: \"flex\",\r\n  //           flexDirection: \"column\",\r\n  //           gap: \"16px\",\r\n  //           background: \"#fff\",\r\n//           padding: \"16px\",\r\n//           borderRadius: \"8px\",\r\n//           boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\r\n//           marginBottom: \"32px\",\r\n//         }}\r\n//       >\r\n//         <input\r\n//           type=\"text\"\r\n//           name=\"title\"\r\n//           placeholder=\"Title\"\r\n//           value={formData.title}\r\n//           onChange={handleInputChange}\r\n//           style={{\r\n//             padding: \"12px\",\r\n//             borderRadius: \"8px\",\r\n//             border: \"1px solid #ccc\",\r\n//             fontSize: \"1rem\",\r\n//           }}\r\n//           required\r\n//         />\r\n//         <textarea\r\n//           name=\"description\"\r\n//           placeholder=\"Description\"\r\n//           value={formData.description}\r\n//           onChange={handleInputChange}\r\n//           rows=\"3\"\r\n//           style={{\r\n  //             padding: \"12px\",\r\n  //             borderRadius: \"8px\",\r\n  //             border: \"1px solid #ccc\",\r\n  //             fontSize: \"1rem\",\r\n  //           }}\r\n  //           required\r\n  //         ></textarea>\r\n  //         <input\r\n  //           type=\"file\"\r\n  //           onChange={handleFileChange}\r\n  //           style={{\r\n    //             padding: \"8px\",\r\n    //             fontSize: \"1rem\",\r\n    //           }}\r\n    //           required\r\n    //         />\r\n    //         <button\r\n    //           type=\"submit\"\r\n//           style={{\r\n//             background: \"#4A90E2\",\r\n//             color: \"#fff\",\r\n//             padding: \"12px\",\r\n//             border: \"none\",\r\n//             borderRadius: \"8px\",\r\n//             cursor: \"pointer\",\r\n//             fontSize: \"1rem\",\r\n//             fontWeight: \"bold\",\r\n//           }}\r\n//         >\r\n//           Upload Image\r\n//         </button>\r\n//       </form>\r\n\r\n//       {/* Cards Display */}\r\n//       <div\r\n//         style={{\r\n  //           display: \"grid\",\r\n//           gridTemplateColumns: \"repeat(auto-fit, minmax(250px, 1fr))\",\r\n//           gap: \"16px\",\r\n//         }}\r\n//       >\r\n//         {filteredCards.length > 0 ? (\r\n  //           filteredCards.map((card) => (\r\n    //             <div\r\n//               key={card._id}\r\n//               style={{\r\n  //                 border: \"1px solid #ccc\",\r\n//                 borderRadius: \"8px\",\r\n//                 overflow: \"hidden\",\r\n//                 boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.1)\",\r\n//                 background: \"#fff\",\r\n//               }}\r\n//             >\r\n//               <img\r\n//                 src={`http://localhost:5000/uploads/${card.image}`}\r\n//                 alt={card.title}\r\n//                 style={{\r\n//                   width: \"100%\",\r\n//                   height: \"200px\",\r\n//                   objectFit: \"cover\",\r\n//                 }}\r\n//               />\r\n//               <div style={{ padding: \"16px\" }}>\r\n//                 <h3\r\n//                   style={{\r\n  //                     margin: \"0 0 8px 0\",\r\n//                     fontWeight: \"bold\",\r\n//                     fontSize: \"1.2rem\",\r\n//                   }}\r\n//                 >\r\n//                   {card.title}\r\n//                 </h3>\r\n//                 <p style={{ margin: 0, color: \"#555\" }}>{card.description}</p>\r\n//               </div>\r\n//             </div>\r\n//           ))\r\n//         ) : (\r\n  //           <p style={{ textAlign: \"center\", color: \"#888\" }}>\r\n  //             No cards found. Try searching for something else!\r\n  //           </p>\r\n  //         )}\r\n  //       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Home;\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport background from \"../pages/BackGround.jpg\";\r\n\r\nconst Home = () => {\r\n  const [cards, setCards] = useState([]);\r\n  const [filteredCards, setFilteredCards] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    image: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchCards = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/cards\");\r\n        const data = await response.json();\r\n        setCards(data);\r\n        setFilteredCards(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching cards:\", error);\r\n      }\r\n    };\r\n\r\n    fetchCards();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const filtered = cards.filter((card) =>\r\n      card.title.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilteredCards(filtered);\r\n  }, [searchTerm, cards]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setFormData({ ...formData, image: e.target.files[0] });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const form = new FormData();\r\n    form.append(\"title\", formData.title);\r\n    form.append(\"description\", formData.description);\r\n    form.append(\"image\", formData.image);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/cards\", {\r\n        method: \"POST\",\r\n        body: form,\r\n      });\r\n      const newCard = await response.json();\r\n      setCards((prevCards) => [newCard, ...prevCards]);\r\n      setFilteredCards((prevCards) => [newCard, ...prevCards]);\r\n      setFormData({ title: \"\", description: \"\", image: null });\r\n    } catch (error) {\r\n      console.error(\"Error uploading card:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"relative\",\r\n        minHeight: \"100vh\",\r\n        backgroundSize: \"cover\",  // Ensures the image covers the entire viewport\r\n        backgroundPosition: \"center\",  // Keeps the image centered\r\n        backgroundAttachment: \"fixed\",  // Keeps the background fixed while scrolling\r\n        fontFamily: \"'Roboto', sans-serif\",\r\n        backgroundImage: `url(${background})`,\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        minHeight: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        color: \"#fff\",\r\n        padding: \"16px\",\r\n      }}\r\n    >\r\n      <h1\r\n        style={{\r\n          textAlign: \"center\",\r\n          marginBottom: \"24px\",\r\n          fontSize: \"3rem\",\r\n          fontWeight: \"bold\",\r\n          textShadow: \"0 4px 8px rgba(0, 0, 0, 0.7)\",\r\n          transition: \"transform 0.3s ease, color 0.3s ease\",\r\n          cursor: \"pointer\",\r\n        }}\r\n        onMouseEnter={(e) => {\r\n          e.target.style.transform = \"scale(1.1)\";\r\n          e.target.style.color = \"#FFD700\"; // Gold hover effect\r\n        }}\r\n        onMouseLeave={(e) => {\r\n          e.target.style.transform = \"scale(1)\";\r\n          e.target.style.color = \"#fff\";\r\n        }}\r\n      >\r\n        Welcome to the Image Gallery\r\n      </h1>\r\n\r\n      {/* Search Bar */}\r\n      <SearchBar setSearchTerm={setSearchTerm} />\r\n\r\n      {/* Upload Form */}\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: \"16px\",\r\n          background: \"rgba(255, 255, 255, 0.8)\", // Semi-transparent white background\r\n          color: \"#000\",\r\n          padding: \"16px\",\r\n          borderRadius: \"8px\",\r\n          boxShadow: \"0 6px 20px rgba(0, 0, 0, 0.2)\",\r\n          marginBottom: \"32px\",\r\n          maxWidth: \"600px\",\r\n          margin: \"0 auto\",\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder=\"Title\"\r\n          value={formData.title}\r\n          onChange={handleInputChange}\r\n          style={{\r\n            padding: \"12px\",\r\n            borderRadius: \"8px\",\r\n            border: \"1px solid #ccc\",\r\n            fontSize: \"1rem\",\r\n          }}\r\n          required\r\n        />\r\n        <textarea\r\n          name=\"description\"\r\n          placeholder=\"Description\"\r\n          value={formData.description}\r\n          onChange={handleInputChange}\r\n          rows=\"3\"\r\n          style={{\r\n            padding: \"12px\",\r\n            borderRadius: \"8px\",\r\n            border: \"1px solid #ccc\",\r\n            fontSize: \"1rem\",\r\n          }}\r\n          required\r\n        ></textarea>\r\n        <input\r\n          type=\"file\"\r\n          onChange={handleFileChange}\r\n          style={{\r\n            padding: \"8px\",\r\n            fontSize: \"1rem\",\r\n          }}\r\n          required\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          style={{\r\n            background: \"#4A90E2\",\r\n            color: \"#fff\",\r\n            padding: \"12px\",\r\n            border: \"none\",\r\n            borderRadius: \"8px\",\r\n            cursor: \"pointer\",\r\n            fontSize: \"1rem\",\r\n            fontWeight: \"bold\",\r\n            transition: \"background 0.3s ease\",\r\n          }}\r\n          onMouseEnter={(e) => (e.target.style.background = \"#357ABD\")}\r\n          onMouseLeave={(e) => (e.target.style.background = \"#4A90E2\")}\r\n        >\r\n          Upload Image\r\n        </button>\r\n      </form>\r\n\r\n      {/* Cards Display */}\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"repeat(auto-fit, minmax(250px, 1fr))\",\r\n          gap: \"20px\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        {filteredCards.length > 0 ? (\r\n          filteredCards.map((card) => (\r\n            <div\r\n              key={card._id}\r\n              style={{\r\n                border: \"1px solid #ccc\",\r\n                borderRadius: \"8px\",\r\n                overflow: \"hidden\",\r\n                boxShadow: \"0 6px 16px rgba(0, 0, 0, 0.2)\",\r\n                background: \"#fff\",\r\n              }}\r\n            >\r\n              <img\r\n                src={`http://localhost:5000/uploads/${card.image}`}\r\n                alt={card.title}\r\n                style={{\r\n                  width: \"100%\",\r\n                  height: \"200px\",\r\n                  objectFit: \"cover\",\r\n                }}\r\n              />\r\n              <div style={{ padding: \"16px\" }}>\r\n                <h3\r\n                  style={{\r\n                    margin: \"0 0 8px 0\",\r\n                    fontWeight: \"bold\",\r\n                    fontSize: \"1.2rem\",\r\n                    color: \"#333\",\r\n                  }}\r\n                >\r\n                  {card.title}\r\n                </h3>\r\n                <p style={{ margin: 0, color: \"#555\" }}>{card.description}</p>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p style={{ textAlign: \"center\", color: \"#eee\" }}>\r\n            No cards found. Try searching for something else!\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACE;AACA;AACA;AACF;AACA;AACE;AACF;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACE;AACA;AACF;;AAEA;AACE;AACA;;AAEA;AACF;AACA;AACA;AACA;AACA;;AAEA;AACE;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACA;AACA;;AAEA;AACE;AACA;AACF;AACA;AACA;AACA;;AAGA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACE;AACA;AACA;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACE;AACF;AACA;AACA;AACA;AACA;AACE;AACE;AACJ;AACA;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;AACA;AACA;AACA;AACA;AACF;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}